<?xml version="1.0" encoding="UTF-8"?>
<project name="ARIES build file" default="help" basedir=".">
  <property name="app.name" value="aries" />
  <property name="app.version" value="1.0.0-beta" />
  <property environment="env" />
  <property name="build.home" value="${basedir}/build" />
  <property name="aries.inst" value="${env.ARIES_HOME}" />

  <path id="classpath">
    <fileset dir="${env.THINKLAB_HOME}/lib" includes="*.jar" />
  </path>

  <typedef resource="org/java/plugin/tools/ant/jpf-tasks.properties">
    <classpath refid="classpath" />
  </typedef>

  <target name="help">
    <echo>
      <![CDATA[
${app.name} build file:
clean - cleans up the project build folder
build - builds entire project
run   - runs application
check - checks plug-ins integrity
docs  - generates plug-ins documentation
dist  - creates binary and source distribution packages
test  - runs some tests
      ]]>
    </echo>
  </target>

  <target name="clean" description="Cleans up the project build folder">
    <tstamp>
      <format property="dt-stamp" pattern="yyyy-MM-dd-HH-mm" />
      <format property="d-stamp" pattern="yyyy-MM-dd" />
    </tstamp>
    <delete dir="${build.home}" quiet="true" />
  </target>

  <target name="-init">
    <mkdir dir="${build.home}" />
  </target>

  <target name="-build-plugins">
    <mkdir dir="${build.home}/plugins" />
    <ant dir="plugins/org.integratedmodelling.aries.core" target="${target}" />
    <ant dir="plugins/org.integratedmodelling.aries.marine" target="${target}" />
    <ant dir="plugins/org.integratedmodelling.aries.valuation" target="${target}" />
    <ant dir="plugins/org.integratedmodelling.aries.aries" target="${target}" />
    <ant dir="plugins/org.integratedmodelling.aries.administration" target="${target}" />
    <ant dir="plugins/org.integratedmodelling.aries.http.explorer" target="${target}" />
  </target>

  <target name="build" depends="-init" description="Builds entire project">
    <antcall target="-build-plugins">
      <param name="target" value="build" />
    </antcall>
    <copy todir="${build.home}/lib">
      <fileset dir="${env.THINKLAB_HOME}/lib" includes="*.jar" />
    </copy>
    <jpf-version basedir="${build.home}/plugins"
                 includes="*/plugin.xml,*/plugin-fragment.xml"
                 versionsfile="${basedir}/plugins/versions.properties"
                 timestampversion="true" />
  </target>

  <target name="run" depends="build" description="Runs application">
    <java jar="${build.home}/lib/im-boot.jar"
          dir="${build.home}"
          fork="true" />
  </target>

  <target name="check"
          depends="build"
          description="Checks plug-ins integrity">
    <jpf-check basedir="${basedir}/plugins"
               includes="*/plugin.xml,*/plugin-fragment.xml"
               verbose="true"
               usepathresolver="true" />
  </target>

  <target name="docs"
          depends="build"
          description="Generates plug-ins documentation">
    <delete dir="${build.home}/docs" />
    <mkdir dir="${build.home}/docs" />
    <antcall target="-build-plugins">
      <param name="target" value="docs" />
    </antcall>
    <jpf-doc basedir="${build.home}/plugins"
             includes="*/plugin.xml,*/plugin-fragment.xml"
             destdir="${build.home}/docs" />
  </target>

  <target name="install"
          depends="build"
          description="Install aries in ARIES_HOME (must be defined)">
    <copy todir="${aries.inst}">
      <fileset dir="${build.home}" includes="**/*" />
    </copy>
  </target>
  
  <target name="dist"
          depends="clean,build,docs"
          description="Prepares distribution packages">
    <zip destfile="${build.home}/${app.name}-bin-${app.version}.zip"
         duplicate="fail"
         update="false">
      <fileset dir="${build.home}" includes="**/*" />
    </zip>
    <zip destfile="${build.home}/${app.name}-src-${app.version}.zip"
         duplicate="fail"
         update="false">
      <fileset dir="${basedir}"
               excludes="build,**/classes/**,.check*,.fb*,nbproject/private/**,build/**,logs/**,data/**,temp/**,*.zip,todo.txt,plugins/org.jpf.demo.toolbox.ftpmonitor/**" />
    </zip>
    <delete includeemptydirs="true">
      <fileset dir="${build.home}">
        <include name="**/*" />
        <exclude name="${app.name}-???-${app.version}.zip" />
      </fileset>
    </delete>
  </target>

  <target name="test" depends="build" description="Some tests">
    <jpf-pack basedir="${build.home}/plugins"
              includes="*/plugin.xml,*/plugin-fragment.xml"
              destfile="${build.home}/all-plugins.jpa" />
    <mkdir dir="${build.home}/all-plugins-extracted" />
    <jpf-unpack srcfile="${build.home}/all-plugins.jpa"
                destdir="${build.home}/all-plugins-extracted" />
  </target>
</project>
